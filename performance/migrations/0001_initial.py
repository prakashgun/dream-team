# Generated by Django 3.1.2 on 2020-10-18 01:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BattingStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BowlingStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ground',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='MatchType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('dob', models.DateField()),
                ('crawl_id', models.IntegerField()),
                ('batting_style', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='performance.battingstyle')),
                ('bowling_style', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='performance.bowlingstyle')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matches', models.IntegerField()),
                ('innings', models.IntegerField()),
                ('not_outs', models.IntegerField()),
                ('runs', models.IntegerField()),
                ('highest_score', models.IntegerField()),
                ('average', models.FloatField()),
                ('balls', models.IntegerField()),
                ('strike_rate', models.FloatField()),
                ('hundreds', models.IntegerField()),
                ('fifties', models.IntegerField()),
                ('fours', models.IntegerField()),
                ('sixes', models.IntegerField()),
                ('catches', models.IntegerField()),
                ('stumpings', models.IntegerField()),
                ('bowl_innings', models.IntegerField()),
                ('bowl_balls', models.IntegerField()),
                ('bowl_runs', models.IntegerField()),
                ('bowl_wickets', models.IntegerField()),
                ('bowl_best_innings', models.IntegerField()),
                ('bowl_best_match', models.IntegerField()),
                ('bowl_average', models.IntegerField()),
                ('bowl_economy', models.IntegerField()),
                ('bowl_stike_rate', models.IntegerField()),
                ('bowl_four_wickets', models.IntegerField()),
                ('bowl_five_wickets', models.IntegerField()),
                ('bowl_ten_wickets', models.IntegerField()),
                ('current_team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='performance.team')),
                ('match_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='performance.matchtype')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='performance.player')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='player_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='performance.playertype'),
        ),
        migrations.CreateModel(
            name='MatchStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batted', models.BooleanField()),
                ('bowled', models.BooleanField()),
                ('bat', models.IntegerField()),
                ('bowl', models.IntegerField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='performance.match')),
                ('opposite_team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='match_stats_opposite_team', to='performance.team')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='performance.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='match_stats_team', to='performance.team')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='batting_first',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='match_batting_first', to='performance.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='bowling_first',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='match_bowling_first', to='performance.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='ground',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='performance.ground'),
        ),
        migrations.AddField(
            model_name='match',
            name='match_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='performance.matchtype'),
        ),
        migrations.AddField(
            model_name='match',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='performance.tournament'),
        ),
    ]
